name: Build And Test
on: [push, pull_request]
jobs:
  plugin:
    name: Plugin (PHP ${{ matrix.php }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php: [7.3]
        wp: [5.5]
    services:
      # nginx:
      #   image: nginx
      #   ports:
      #     - 8080:8080
      #   options: -v /usr/src/wordpress:/usr/share/nginx/html --name nginx
      mysql:
        image: mysql:5.7
        env:
          MYSQL_DATABASE: wordpress
          MYSQL_USER: root
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - name: Check out source code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '${{ matrix.php }}'
          extensions: mysql, zip
          coverage: none
          tools: composer, wp-cli

      - name: Get Composer cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Use Composer cache
        uses: actions/cache@master
        with:
          path: ${{ steps['composer-cache'].outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install dependencies
        run: COMPOSER_ROOT_VERSION=dev-master composer install --prefer-dist --no-progress --no-suggest

      - name: Start MySQL server
        run: sudo service mysql start

      - name: Prepare test database
        run: |
          export MYQSL_HOST=127.0.0.1
          export MYSQL_TCP_PORT=${{ job.services.mysql.ports['3306'] }}
          mysql -e 'CREATE DATABASE IF NOT EXISTS wordpress;' -uroot -proot
          mysql -e 'GRANT ALL PRIVILEGES ON wordpress.* TO "wordpress"@"127.0.0.1" IDENTIFIED BY "password1"' -uroot -proot
          mysql -e 'GRANT ALL PRIVILEGES ON wordpress_scaffold.* TO "wordpress"@"127.0.0.1" IDENTIFIED BY "password1"' -uroot -proot

      - name: Install WordPress
        run: |
          sudo mkdir -p /usr/src/wordpress/
          sudo chmod o+w /usr/src/wordpress/
          cd /usr/src/wordpress/
          wp core download --version=${{ env.WP_VERSION }}
          wp config create --dbname=wordpress --dbuser=root --dbpass=root --allow-root --debug
          wp core install --url=http://localhost:8080 --title=Test --admin_user=wordpress --admin_password=wordpress \
            --admin_email=admin@local.test --skip-email --allow-root
          cd ${{ github.workspace }}
          ls -l
          cp -R ${{ github.workspace }} /usr/src/wordpress/wp-content/plugins/testing-wp-install
          sudo rm -rf /usr/src/wordpress/wp-content/plugins/testing-wp-install/cypress
          ls -l /usr/src/wordpress/wp-content/plugins/testing-wp-install
          sudo mv /usr/src/wordpress/* ${{ github.workspace }}
          ls -l

        env:
          WP_VERSION: ${{ matrix.wp }}
      # - name: Restart nginx
      #   uses: docker://docker
      #   with:
      #     args: docker restart nginx

      - run: nohup php -S localhost:8080 > php.log 2>&1 &

      - name: Cypress
        run: npx cypress cache path && npx cypress cache list
      - name: Cache Cypress
        id: cache-cypress
        uses: actions/cache@v1
        with:
          path: ~/.cache/Cypress
          key: cypress-cache-v1-${{ runner.os }}-${{ hashFiles('**/package.json') }}
      # install Cypress binary
      - run: npx cypress install && npx cypress cache list
      - uses: cypress-io/github-action@v2
        with:
          # start: php -S localhost:8080
          # command: npm run cy:run
          install: false
          # working-directory: wp-content/plugins/testing-wp-install
        env:
          CYPRESS_baseUrl: http://localhost:8080/index.php
          # CYPRESS_fileServerFolder: ${{ github.workspace }}
          # CYPRESS_fixturesFolder: ${{ github.workspace }}/wp-content/plugins/testing-wp-install/cypress/fixtures
          # CYPRESS_integrationFolder: ${{ github.workspace }}/wp-content/plugins/testing-wp-install/cypress/integration
          # CYPRESS_pluginsFile: ${{ github.workspace }}/wp-content/plugins/testing-wp-install/cypress/plugins/index.js
          # CYPRESS_supportFile: ${{ github.workspace }}/wp-content/plugins/testing-wp-install/cypress/support/index.js
          # CYPRESS_host: 127.0.0.1
      - uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
      # Test run video was always captured, so this action uses "always()" condition
      - uses: actions/upload-artifact@v1
        if: always()
        with:
          name: cypress-videos
          path: cypress/videos
