name: Test extensions #check cache gmp
on: [push]
jobs:
  run:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-latest]
        php-versions: ['5.4', '5.5']
        #php-versions: ['5.3', '5.4', '5.5', '5.6', '7.0', '7.1','7.2', '7.3', '7.4', '8.0']
    name: PHP ${{ matrix.php-versions }} Test on ${{ matrix.operating-system }}
    env:
      extensions: gmp
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Get Extension Directory
      id: extensioninfo
      shell: bash
      run: curl -sSL https://raw.githubusercontent.com/shivammathur/setup-php/v2/src/scripts/ext/extensions.sh | bash -s "${{ env.extensions }}" ${{ matrix.php-versions }}

    - name: Cache extensions
      uses: actions/cache@v1
      with:
        path: ${{ steps.extensioninfo.outputs.ext_dir }}
        key: ${{ runner.os }}-extensions-${{ matrix.php-versions }}-${{ steps.extensioninfo.outputs.ext_hash }}
        restore-keys: ${{ runner.os }}-extensions-${{ matrix.php-versions }}-${{ steps.extensioninfo.outputs.ext_hash }}

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-versions }}
        #extensions: ${{ env.extensions }}

    - name: Check PHP version
      run: |
        ppa_updated="false"
        update_ppa() {
          if [ "$ppa_updated" = "false" ]; then
            if [[ "$version" =~ $old_versions ]]; then
              ppa="dotdeb-ubuntu-php*.list"
            else
              ppa="ondrej-ubuntu-php*.list"
            fi
            find /etc/apt/sources.list.d -type f -name "$ppa" -exec sudo DEBIAN_FRONTEND=noninteractive apt-fast update -o Dir::Etc::sourcelist="{}" ';' >/dev/null 2>&1
            ppa_updated="true"
          fi
        }        
        extension=gmp
        release_version=$(php -v | head -n 1 | cut -d' ' -f 2)
        install_command="sudo DEBIAN_FRONTEND=noninteractive apt-get install -y php${{ matrix.php-versions }}-gmp"
        install_command="update_ppa && ${install_command/5\.[4-5]-$extension/5-$extension=$release_version}"
        echo $install_command
        eval "$install_command"

    - name: Check PHP extensions
      run: php -m
