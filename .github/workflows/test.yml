name: Test extensions #test cache
on: [push]
jobs:
  run:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-latest]
        php-versions: ['5.4']
    name: PHP ${{ matrix.php-versions }} Test on ${{ matrix.operating-system }}
    env:
      extensions: mbstring
      #extensions: apc, curl, dom, imagick, intl, mbstring, mcrypt, memcached, mysql, pdo, pdo_mysql, pdo_pgsql, pdo_sqlite, pgsql, sqlite
      key: cache-v1
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup cache environment
      id: cache-env
      uses: shivammathur/cache-extensions@v1
      with:
        php-version: ${{ matrix.php-versions }}
        extensions: ${{ env.extensions }}
        key: ${{ env.key }}

    - name: Cache extensions
      uses: actions/cache@v1
      with:
        path: ${{ steps.cache-env.outputs.dir }}
        key: ${{ steps.cache-env.outputs.key }}
        restore-keys: ${{ steps.cache-env.outputs.key }}

    - name: Setup PHP
      uses: shivammathur/setup-php@verbose
      with:
        php-version: ${{ matrix.php-versions }}
        extensions: ${{ env.extensions }}
        
    - name: Install extensions
      run: |
        ppa_updated="false"
        old_versions="5.[4-5]"
        debconf_fix="DEBIAN_FRONTEND=noninteractive"
        apt_install="sudo $debconf_fix apt-fast install -y"      
        version="5.4"
        extension="memcached"
        update_ppa() {
          if [ "$ppa_updated" = "false" ]; then
            if [[ "$version" =~ $old_versions ]]; then
              ppa="dotdeb-ubuntu-php*.list"
            else
              ppa="ondrej-ubuntu-php*.list"
            fi
            find /etc/apt/sources.list.d -type f -name "$ppa" -exec sudo "$debconf_fix" apt-fast update -o Dir::Etc::sourcelist="{}" ';' >/dev/null 2>&1
            echo "true"
          fi
        }      
        test() {
            release_version=$(php -v | head -n 1 | cut -d' ' -f 2)
        }
        test
        install_command="$apt_install $extension" 
        install_command="ppa_updated=$(update_ppa) && ${install_command/5\.[4-5]-$extension/5-$extension=$release_version}"
        echo "install_command: $install_command"
        eval "$install_command"

    - name: Check PHP version
      run: php -v

    - name: Check PHP extensions
      run: php -m
