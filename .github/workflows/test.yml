name: PHP Composer

on: [push, pull_request]

jobs:
  test:

    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:      
        operating-system: [macos-latest]
        php-versions: ['5.4', '5.3']
    name: PHP ${{ matrix.php-versions }} Test on ${{ matrix.operating-system }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Test
      id: test-step
      run: |
        version=${{ matrix.php-versions }}
        nodot_version=${version/./}
        old_versions="5.[3-5]"
        tick="✓"
        cross="✗"

        step_log() {
          message=$1
          printf "\n\033[90;1m==> \033[0m\033[37;1m%s\033[0m\n" "$message"
        }

        # Function to log result of a operation
        add_log() {
          mark=$1
          subject=$2
          message=$3
          if [ "$mark" = "$tick" ]; then
            printf "\033[32;1m%s \033[0m\033[34;1m%s \033[0m\033[90;1m%s\033[0m\n" "$mark" "$subject" "$message"
          else
            printf "\033[31;1m%s \033[0m\033[34;1m%s \033[0m\033[90;1m%s\033[0m\n" "$mark" "$subject" "$message"
          fi
        }

        add_pecl_old() {
          pecl_version='master'
          if [ "$1" = "53" ]; then
            pecl_version='v1.9.5'
          fi
          curl -o pear.phar -sSL https://github.com/pear/pearweb_phars/raw/$pecl_version/install-pear-nozlib.phar
          sudo php pear.phar -d /opt/local/lib/php$1 -b /usr/local/bin && rm -rf pear.phar
        }

        add_macports() {
          uri=$(curl -sSL https://github.com/macports/macports-base/releases | grep -Eo "(\/.*Catalina.pkg)" | head -n 1)
          curl -o port.pkg -sSL https://github.com"$uri"
          sudo installer -pkg port.pkg -target / && rm -rf port.pkg
        }

        sync_macports() {
          while true; do
            status=0
            sudo port sync || status=$?
            if [[ "$status" -eq 0 ]]; then
              break
            fi
            sleep 2
          done
        }

        port_setup_php() {
          sudo port install php$1 php$1-curl php$1-mbstring php$1-xmlrpc php$1-openssl php$1-opcache
          sudo cp /opt/local/etc/php$1/php.ini-development /opt/local/etc/php$1/php.ini
          sudo port select --set php php$1
          sudo ln -sf /opt/local/bin/* /usr/local/bin
          add_pecl_old "$1"
        }        
        export PATH="/opt/local/bin:/opt/local/sbin:$PATH"
        export TERM=xterm
        step_log "Setup Macports"
        add_macports
        add_log "$tick" "Macports" "Installed"
        sync_macports
        add_log "$tick" "Macports" "Synced"
        step_log "Setup PHP"
        port_setup_php $nodot_version
        status="Installed"   
        php -i  | grep "Registered Stream Socket Transports "
        php -v
        php -m
        curl -V
        php -r "echo file_get_contents('https://repo.packagist.org/packages.json');"
        ext_dir=$(php -i | grep -Ei "extension_dir => /" | sed -e "s|.*=> s*||")
        echo $ext_dir
        echo "::set-output name=ext_dir::$ext_dir"
    - name: Test
      run: echo ${{ steps.test-step.outputs.ext_dir }}
    - uses: actions/upload-artifact@v1    
      with:
        name: ext
        path: ${{ steps.test-step.outputs.ext_dir }}
