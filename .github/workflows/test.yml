name: Test workflow
on: [push]
jobs:
  package:    
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:      
        operating-system: [ubuntu-20.04]
        php-versions: ['5.6', '7.0', '7.1', '7.2', '7.3', '7.4']
    name: PHP ${{ matrix.php-versions }} Test on ${{ matrix.operating-system }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2  
    
    - name: Clean
      run: sudo rm -rf /var/cache/apt/archives/*

    - name: Setup PHP
      uses: shivammathur/setup-php@verbose
      with:
        php-version: ${{ matrix.php-versions }}
      env:
        update: true        
        
    - name: Test PHP version
      run: php -v && php -m
        
    - uses: actions/upload-artifact@v2
      with:
        name: php${{ matrix.php-versions }}
        path: /var/cache/apt/archives/*.deb
        
  test:
    needs: package
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:      
        operating-system: [ubuntu-20.04]
        php-versions: ['5.6', '7.0', '7.1', '7.2', '7.3', '7.4']
    name: PHP ${{ matrix.php-versions }} Test on ${{ matrix.operating-system }}
    steps:
    - run: mkdir -p /tmp/php
    - uses: actions/download-artifact@v2
      with:
        name: php${{ matrix.php-versions }}
        path: /tmp/php
        
    - name: Install PHP
      run: |
        version='${{ matrix.php-versions }}'
        ls /tmp/php
        sudo mkdir -p /var/run /run/php
        pids=()
        for deb in /tmp/php/*.deb; do
          sudo DEBIAN_FRONTEND=noninteractive dpkg -i --force-conflicts $deb &
          pids+=("$!")
        done
        wait "${pids[@]}"
        for tool in pear pecl php phar phar.phar php-cgi php-config phpize phpdbg; do
          if [ -e "/usr/bin/$tool$version" ]; then
            sudo update-alternatives --install /usr/bin/"$tool" "$tool" /usr/bin/"$tool$version" 50 || true
            sudo update-alternatives --set $tool /usr/bin/"$tool$version"
          fi
        done
        
    - name: Test PHP version
      run: php -v && php -m
    
    
