name: Test workflow
on: [push]
jobs:
  run:    
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:      
        operating-system: [windows-latest, windows-2016]
        php-versions: ['5.3', '5.4', '5.5']
    name: PHP ${{ matrix.php-versions }} Test on ${{ matrix.operating-system }}
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Install PhpManager
      run: |
        Install-Module -Name PhpManager -Force -Scope CurrentUser
        Install-Module -Name VcRedist -Force
    - name: Install PHP
      run: |
        $php_dir = "C:\tools\php"
        Remove-Item $php_dir -Recurse
        Install-Php -Version ${{ matrix.php-versions }} -Architecture x86 -ThreadSafe $false -InstallVC -Path $php_dir -TimeZone UTC -InitialPhpIni Production -Force
        $installed = Get-Php -Path $php_dir
        Set-PhpIniKey -Key 'date.timezone' -Value 'UTC' -Path $php_dir
    - name: Setup
      run: |
        $php_dir = "C:\tools\php"
        DIR $php_dir\ext
        Add-Content $php_dir\php.ini "extension=$php_dir\php_openssl.dll"
        Add-Content $php_dir\php.ini "extension=$php_dir\php_curl.dll"
        php -m    
        #$bintray = "https://dl.bintray.com/shivammathur/php"
        #Invoke-WebRequest -UseBasicParsing -Uri $bintray/libeay32.dll -OutFile $php_dir\libeay32.dll
        #Invoke-WebRequest -UseBasicParsing -Uri $bintray/ssleay32.dll -OutFile $php_dir\ssleay32.dll
    - name: Check ini
      run: cat C:\tools\php\php.ini    
    - name: Update CA
      run: |
        $php_dir = "C:\tools\php"
        try {
          Update-PhpCAInfo -Path $php_dir -Source CurrentUser        
        } catch {
          Write-Output $_.Exception|format-list -force
        }
    - name: Testing PHP version
      run: php -v
    - name: Testing extension
      run: php -m
    - name: Test composer
      run: |        
        php -r "echo file_get_contents('https://repo.packagist.org/packages.json');"        
