name: Test workflow #test
on: [push]
jobs:
  run:    
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:      
        operating-system: [windows-latest]
        php-versions: ['7.3']
        #php-versions: ['5.6', '7.0', '7.1', '7.2', '7.3', '7.4', '8.0']
        #php-versions: ['5.3', '5.4', '5.5', '5.6', '7.0', '7.1', '7.2', '7.3', '7.4', '8.0']
    name: PHP ${{ matrix.php-versions }} Test on ${{ matrix.operating-system }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Install PHP
      run: |
        try {
          $php_dir = 'C:\tools\php'
          Function Install-PhpManager() {
            $repo = "mlocati/powershell-phpmanager"
            $zip_file = "${php_dir}\PhpManager.zip"
            $tags = Invoke-WebRequest https://api.github.com/repos/$repo/tags | ConvertFrom-Json
            $tag = $tags[0].Name
            Invoke-WebRequest -UseBasicParsing -Uri https://github.com/$repo/archive/$tag.zip -OutFile $zip_file
            Expand-Archive -Path $zip_file -DestinationPath $php_dir\PhpManager
            Import-Module $php_dir\PhpManager\powershell-phpmanager-$tag\PhpManager
          }        
          Measure-Command { Install-PhpManager }
          Measure-Command { Install-Php -Version ${{ matrix.php-versions }} -Architecture 'x64' -ThreadSafe $true -Path $php_dir -TimeZone UTC -InitialPhpIni Production -Force }
        } catch [Exception] {
          echo $_.Exception.GetType().FullName, $_.Exception.Message
        }
    - name: Testing PHP version
      run: php -v
    - name: Testing extension
      run: php -m
