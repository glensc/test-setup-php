# https://help.github.com/en/categories/automating-your-workflow-with-github-actions

name: "Semantic Release"

on: [push]

jobs:
    Test:
        name: "PHP ${{ matrix.php-versions }} Test on ubuntu-latest OS with ${{ matrix.dependencies }} dependencies"

        if: "github.repository != 'narrowspark/php-library-template'"

        runs-on: "ubuntu-20.04"        

        strategy:
            matrix:
                php-versions: ["8.0"]
                dependencies: ["locked"]

        env:
            key: "continuous-integration-linux-v2" # change key (version) to clear cache
            extensions: "mbstring"
            ini-values: "date.timezone=Europe/Berlin, assert.exception=1, zend.assertions=1, opcache.enable=1, opcache.enable_cli=0, opcache.optimization_level=-1, opcache.jit=1255, opcache.jit_buffer_size=32M, serialize_precision=14"
            tools: "composer"

        steps:

            - name: "Setup cache environment"
              id: "cache-env"
              uses: "shivammathur/cache-extensions@v1"
              with:
                  php-version: "${{ matrix.php-versions }}"
                  extensions: "${{ env.extensions }}"
                  key: "${{ env.key }}"

            - name: "Cache extensions"
              uses: "actions/cache@v2"
              with:
                  path: "${{ steps.cache-env.outputs.dir }}"
                  key: "${{ steps.cache-env.outputs.key }}"
                  restore-keys: "${{ steps.cache-env.outputs.key }}"

            - name: "Setup PHP"
              uses: "shivammathur/setup-php@v2"
              with:
                  php-version: "${{ matrix.php-versions }}"
                  extensions: "${{ env.extensions }}"
                  ini-values: "${{ env.ini-values }}"
                  tools: "${{ env.tools }}"
                  coverage: "pcov"

            - name: "Setup Problem Matchers for PHP"
              run: "echo '::add-matcher::${{ runner.tool_cache }}/php.json'"

            - name: "Check PHP Version"
              run: "php -v"

            - name: "List all php extensions with versions"
              run: "php -r 'foreach (get_loaded_extensions() as $extension) echo $extension . \" \" . phpversion($extension) . PHP_EOL;'"
