name: Cache PHP
on:
  - push
  - repository_dispatch
  - workflow_dispatch
jobs:
  cache:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, ubuntu-18.04, ubuntu-16.04]
        php-versions: ['5.6', '7.0', '7.1', '7.2', '7.3', '7.4', '8.0']
    if: "!contains(github.event.head_commit.message, 'skip-build')"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Clean
        run: bash src/clean.sh
      - name: Get ZSTD_DIR
        id: zstd
        run: echo "::set-output name=ZSTD_DIR::$(curl -sL https://github.com/facebook/zstd/releases/latest | grep -Po "zstd-(\d+\.\d+\.\d+)" | head -n 1)"
      - name: Add ZSTD
        env:
          REPO: ${{ github.repository }}
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
          USER: ${{ github.repository_owner }}
          ZSTD_DIR: ${{ steps.zstd.outputs.ZSTD_DIR }}
        run: bash src/install-zstd.sh
      - name: Configure git
        run: bash src/configure-git.sh
      - name: Setup PHP
        env:
          PHP_VERSION: ${{ matrix.php-versions }}
        run: bash src/install-php.sh
      - name: Build package
        env:
          GITHUB_WORKSPACE: ${{ github.workspace }}
          PHP_VERSION: ${{ matrix.php-versions }}
        run: bash src/package.sh
      - name: Upload zstd Artifact
        if: matrix.php-versions == '8.0'
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.zstd.outputs.zstd_dir }}-ubuntu${{ matrix.container }}
          path: /opt/zstd
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.php-versions }}
          path: builds
  release:
    runs-on: ubuntu-latest
    needs: cache
    if: "!contains(github.event.head_commit.message, 'skip-release')"
    steps:
      - uses: actions/checkout@v2
      - run: mkdir builds
      - uses: actions/download-artifact@v2
        with:
          path: builds
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - name: Install cloudsmith-cli
        run: pip install --upgrade cloudsmith-cli
      - name: Release
        run: bash src/release.sh
        env:
          CLOUDSMITH_API_KEY: ${{ secrets.CLOUDSMITH_API_KEY }}
          GITHUB_MESSAGE: ${{ github.event.head_commit.message }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_WORKSPACE: ${{ github.workspace }}
