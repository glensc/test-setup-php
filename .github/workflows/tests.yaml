# GitHub Action for Symfony with MySQL
name: Testing Symfony with MySQL
on: [push, pull_request]
env:
  DATABASE_USER: test_user
  DATABASE_PASS: test_pass
  DATABASE_NAME: test_db
  fail-fast: true
  SYMFONY_PHPUNIT_DIR: "$HOME/symfony-bridge/.phpunit"
  SYMFONY_REQUIRE: ">=4.4"
  SYMFONY_DEPRECATIONS_HELPER: 40  
jobs:
  symfony:
    name: Symfony (PHP ${{ matrix.php-versions }})
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: false
          MYSQL_USER: test_user
          MYSQL_PASSWORD: test_pass
          MYSQL_DATABASE: test_db
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    strategy:
      fail-fast: false
      matrix:
        php-versions: ['7.3', '7.4']
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@develop #https://github.com/shivammathur/setup-php
        with:
          php-version: ${{ matrix.php-versions }}
          tools: flex, phpunit-bridge
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, mysql
          coverage: pcov #optional
      - name: Test extensions
        run: php -m
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          # Use composer.json for key, if composer.lock is not committed.
          # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install Composer dependencies
        run: |
          composer install --no-progress --prefer-dist --optimize-autoloader
      - name: Run Migration
        run: |
          composer require symfony/orm-pack
          php bin/console doctrine:schema:update --force || echo "No migrations found or schema update failed"
          php bin/console doctrine:migrations:migrate || echo "No migrations found or migration failed"
        env:
          DATABASE_URL: mysql://test_user:test_pass@127.0.0.1:${{ job.services.mysql.ports['3306'] }}/test_db    

      - name: "Install PHPUnit"
        run: simple-phpunit install

      - name: "PHPUnit version"
        run: simple-phpunit --version

      - name: "Run tests"
        run: simple-phpunit --coverage-text
