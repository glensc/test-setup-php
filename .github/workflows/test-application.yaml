name: Test application

on:
    pull_request:
    push:

jobs:
    php-windows:
        name: "PHP ${{ matrix.php-version }} and Node.js ${{ matrix.node-version }} on Windows"

        runs-on: windows-latest

        env:
            APP_ENV: test
            APP_SECRET: a448d1dfcaa563fce56c2fd9981f662b
            MAILER_URL: null://localhost
            SULU_ADMIN_EMAIL:
            DATABASE_URL: mysql://root:root@127.0.0.1:3306/sulu_test?serverVersion=${{ matrix.mysql-version }}

        strategy:
            fail-fast: false
            matrix:
                include:
                    - php-version: '7.4'
                      node-version: '14'
                      mysql-version: '8.0'
                      php-extensions: 'ctype, iconv, intl, mysql, pdo_mysql, php_fileinfo, imagick'
                      tools: 'composer:v2'

        steps:
            - name: Checkout project
              uses: actions/checkout@v2

            - name: Install and configure PHP
              uses: shivammathur/setup-php@verbose
              with:
                  php-version: ${{ matrix.php-version }}
                  extensions: ${{ matrix.php-extensions }}
                  tools: ${{ matrix.tools }}
                  ini-values: 'memory_limit=-1'

            - name: Test PHP
              run: |
                php -v
                php -m

            - name: Install and configure MySQL
              uses: shogo82148/actions-setup-mysql@v1.0.1
              with:
                  mysql-version: ${{ matrix.mysql-version }}
                  root-password: 'root'
                  my-cnf: |
                      [mysqld]
                      default-authentication-plugin=mysql_native_password

            - name: Install composer dependencies
              uses: ramsey/composer-install@v1
              with:
                  composer-options: '--no-cache'
                  dependency-versions: 'highest'

            - name: Build sulu
              run: bin/adminconsole sulu:build dev --no-interaction

            - name: Build container
              run: |
                  bin/adminconsole cache:clear --env dev
                  bin/websiteconsole cache:clear --env dev
                  bin/adminconsole cache:clear --env test
                  bin/websiteconsole cache:clear --env test
                  bin/adminconsole cache:clear --env stage
                  bin/websiteconsole cache:clear --env stage
                  bin/adminconsole cache:clear --env prod
                  bin/websiteconsole cache:clear --env prod

            - name: Lint container
              run: |
                  bin/adminconsole lint:container --env dev
                  bin/websiteconsole lint:container --env dev
                  bin/adminconsole lint:container --env test
                  bin/websiteconsole lint:container --env test
                  bin/adminconsole lint:container --env stage
                  bin/websiteconsole lint:container --env stage
                  bin/adminconsole lint:container --env prod
                  bin/websiteconsole lint:container --env prod

            - name: Lint code
              run: |
                  composer validate --strict
                  bin/adminconsole doctrine:ensure-production-settings --env prod
                  bin/adminconsole doctrine:schema:validate
                  bin/adminconsole lint:twig templates
                  bin/adminconsole lint:yaml config

            - name: Execute test cases
              run: bin/phpunit

            - name: Test download-language script
              run: bin/adminconsole sulu:admin:download-language nl

            - name: Install and configure Node.js
              uses: actions/setup-node@v2
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Install npm dependencies
              uses: bahmutov/npm-install@v1
              with:
                  working-directory: assets/admin
                  useLockFile: false

            - name: Build administration interface application
              run: npm run build
              working-directory: assets/admin
