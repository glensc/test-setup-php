name: Test application

on:
    pull_request:
    push:

jobs:
    php-windows:
        name: "PHP ${{ matrix.php-version }} on Windows (mysql ${{ matrix.mysql-version }}, ${{ matrix.phpcr-transport }}, ${{ matrix.dependency-versions }})"
        runs-on: windows-latest

        env:
            APP_ENV: test
            APP_SECRET: a448d1dfcaa563fce56c2fd9981f662b
            MAILER_URL: null://localhost
            SULU_ADMIN_EMAIL:
            DATABASE_URL: mysql://root:root@127.0.0.1:3306/sulu_test?serverVersion=${{ matrix.mysql-version }}
            PHPCR_TRANSPORT: ${{ matrix.phpcr-transport }}

        strategy:
            fail-fast: false
            matrix:
                include:
                    - php-version: '7.4'
                      mysql-version: '8.0'
                      phpcr-transport: 'doctrinedbal'
                      dependency-versions: 'highest'
                      php-extensions: 'ctype, iconv, intl, mysql, pdo_mysql, php_fileinfo, imagick'
                      tools: 'composer'
                      env:
                          SYMFONY_DEPRECATIONS_HELPER: disabled
                          DATABASE_CHARSET: utf8mb4
                          DATABASE_COLLATE: utf8mb4_unicode_ci

        steps:
            - name: Checkout project
              uses: actions/checkout@v2

            - name: Install and configure PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php-version }}
                  extensions: ${{ matrix.php-extensions }}
                  tools: ${{ matrix.tools }}
                  ini-values: 'memory_limit=-1'

            - name: Test PHP
              run: |
                php -v
                php -m

            - name: Install and configure MySQL
              uses: shogo82148/actions-setup-mysql@v1.0.1
              with:
                  mysql-version: ${{ matrix.mysql-version }}
                  root-password: 'root'
                  my-cnf: |
                      [mysqld]
                      default-authentication-plugin=mysql_native_password

            - name: Download jackrabbit
              if: ${{ matrix.phpcr-transport == 'jackrabbit' }}
              uses: carlosperate/download-file-action@v1.0.3
              with:
                  file-url: http://archive.apache.org/dist/jackrabbit/2.20.2/jackrabbit-standalone-2.20.2.jar
                  file-name: jackrabbit-standalone.jar
                  location: downloads

            - name: Run jackrabbit
              if: ${{ matrix.phpcr-transport == 'jackrabbit' }}
              run: powershell -command "Start-Process -FilePath java -ArgumentList '-jar downloads/jackrabbit-standalone.jar'"

            - name: Require jackrabbit dependencies
              if: ${{ matrix.phpcr-transport == 'jackrabbit' }}
              run: |
                  composer remove jackalope/jackalope-doctrine-dbal --dev --no-interaction --no-update
                  composer require jackalope/jackalope-jackrabbit:^1.4  --no-interaction --no-update

            - name: Install composer dependencies
              uses: ramsey/composer-install@v1
              with:
                  dependency-versions: ${{ matrix.dependency-versions }}

            - name: Bootstrap test environment
              run: composer bootstrap-test-environment
              env: ${{ matrix.env }}

            - name: Execute test cases
              run: composer test
              env: ${{ matrix.env }}

            - name: Install and configure Node.js
              uses: actions/setup-node@v2
              with:
                  node-version: '14'

            - name: Install npm dependencies
              uses: bahmutov/npm-install@v1
              with:
                  useLockFile: false

            - name: Build javascript
              run: npm run build
