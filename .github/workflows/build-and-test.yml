name: Phalcon CI # with cache

on: [push]

jobs:
  generate:
    # To prevent build a particular commit use
    #     git commit -m "......... [ci skip]"
    if: "!contains(github.event.head_commit.message, 'ci skip')"

    runs-on: ubuntu-20.04
    name: Build Phalcon Pecl Package
    steps:
      - name: Setup Environment Variables
        run: |
          echo "ZEPHIR_PARSER_VERSION=v1.3.6" >> $GITHUB_ENV
          echo "ZEPHIR_VERSION=0.13.4" >> $GITHUB_ENV
          echo "LANG=en_US.UTF-8" >> $GITHUB_ENV
          echo "LANGUAGE=en_US.UTF-8" >> $GITHUB_ENV
          echo "LC_ALL=en_US.UTF-8" >> $GITHUB_ENV

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'
          extensions: mbstring, intl, json, psr
          tools: pecl
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Common Settings
        run: |
          # Core dump settings
          ulimit -c unlimited -S || true

          # Hide "You are in 'detached HEAD' state" message
          git config --global advice.detachedHead false

      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Setup APT Repositories
        run: |
          # We don't need this at all, and our
          # builds often fails because Microsoft
          # servers are unstable or even offline.
          sudo rm -f /etc/apt/sources.list.d/dotnetdev.list
          sudo rm -f /etc/apt/sources.list.d/azure*.list

      - name: Install System Dependencies
        run: |
          sudo apt-get update --quiet --yes 1>/dev/null
          sudo apt-get install --no-install-recommends -q -y re2c

      - name: Install Zephir
        run: .ci/install-zephir.sh

      - name: Generate C Code
        run: |
          $HOME/bin/zephir fullclean
          $HOME/bin/zephir generate
          (cd build && php gen-build.php)

      - name: Upload compile-errors.log
        uses: actions/upload-artifact@v2
        with:
          name: compile-errors
          path: compile-errors.log

      - name: Create Pecl Package (PHP 8)
        id: pecl_create
        run: |
          cp build/phalcon/safe/config.w32 config.w32
          cp build/phalcon/safe/phalcon.zep.c phalcon.zep.c
          cp build/phalcon/safe/config.m4 config.m4
          cp build/phalcon/safe/php_phalcon.h php_phalcon.h
          cp build/phalcon/safe/phalcon.zep.h phalcon.zep.h
          pecl package
          phalcon_package="`ls | grep phalcon-*tgz`"
          mv $phalcon_package phalcon-pecl.tgz

      - name: Validate Pecl Package
        run: pecl package-validate phalcon-pecl.tgz

      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: 'phalcon-pecl'
          path: phalcon-pecl.tgz

  build-and-test-macos:
    # To prevent build a particular commit use
    #     git commit -m "......... [ci skip]"
    if: "!contains(github.event.head_commit.message, 'ci skip')"

    needs: generate
    runs-on: ${{ matrix.operating-system }}
    env:
      extensions: mbstring, intl, json, yaml, apcu, imagick, gd, gettext, igbinary, msgpack, redis, zip
      HOMEBREW_NO_INSTALL_CLEANUP: 1
      ext_cache_key: v5.0.0-alpha.2-macOS-7
    strategy:
      fail-fast: false
      matrix:
        operating-system: [macos-latest]
        php-versions: ['7.4', '8.0']

    name: PHP ${{ matrix.php-versions }} Test on ${{ matrix.operating-system }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Setup cache environment
        id: extcache
        uses: shivammathur/cache-extensions@develop
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: ${{ env.extensions }}
          key: ${{ env.ext_cache_key }}

      - name: Cache extensions
        uses: actions/cache@v2
        with:
          path: ${{ steps.extcache.outputs.dir }}
          key: ${{ steps.extcache.outputs.key }}
          restore-keys: ${{ steps.extcache.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          ini-values: apc.enable_cli=on, session.save_path=/tmp
          extensions: ${{ env.extensions }}
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Download Phalcon Pecl Package
        uses: actions/download-artifact@v1
        with:
          name: phalcon-pecl

      - name: Install Package
        run: |
          sudo xcode-select -s /Applications/Xcode_12.app
          xcodebuild -version
          export MAKEFLAGS="-j$(getconf _NPROCESSORS_ONLN)"
          sudo pecl -v install phalcon-pecl/phalcon-pecl.tgz
          sudo pecl -v install msgpack

      - name: Verify Install
        run: php --ri phalcon

      - name: Install Packages
        run: composer install --prefer-dist

      - name: Setup Tests
        run: |
          cp tests/_config/.env.default .env
          vendor/bin/codecept build

      - name: Run Unit Tests
        run: vendor/bin/codecept run --ext DotReporter unit

      - name: Run CLI Tests
        run: vendor/bin/codecept run --ext DotReporter cli