name: Build PHP
on:
  push:
jobs:
  build:
    name: Build PHP ${{ matrix.php-version }} on ${{ matrix.operating-system }}
    runs-on: ${{ matrix.operating-system }}
    container: ubuntu:precise
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-latest]
        php-version: ['5.3']
    steps:
      - name: Install required packages
        run: |
          debconf_fix="DEBIAN_FRONTEND=noninteractive"
          apt-get update
          apt-get install sudo curl python-software-properties -y
          LC_ALL=C.UTF-8 sudo apt-add-repository ppa:ondrej/php -y
          LC_ALL=C.UTF-8 sudo apt-add-repository ppa:ubuntu-toolchain-r/test
          sudo "$debconf_fix" apt-get update
          sudo "$debconf_fix" apt-get -y install apache2 apache2-dev build-essential checkinstall zlib1g-dev automake autoconf bzip2 git m4 make libstdc++6-4.7-dev gcc-4.7 g++-4.7 gettext expect locales language-pack-de re2c mysql-server postgresql pkg-config libc-client-dev libcurl4-gnutls-dev libacl1-dev libapache2-mod-php5 libapr1-dev libasn1-8-heimdal libattr1-dev libblkid1 libbz2-dev libc6 libcap2 libc-bin libclass-isa-perl libcomerr2 libdb5.1-dev libdbus-1-3 libdebian-installer4 libdrm2 libdrm-intel1 libdrm-nouveau1a libdrm-radeon1 libexpat1-dev libenchant-dev libffi-dev libfreetype6-dev libgcc1 libgcrypt11-dev libgdbm-dev libglib2.0-0 libgnutls-dev libgpg-error0 libgssapi3-heimdal libgssapi-krb5-2 libgmp-dev libhcrypto4-heimdal libheimbase1-heimdal libheimntlm0-heimdal libhx509-5-heimdal libk5crypto3 libkeyutils1 libklibc libkrb5-26-heimdal libkrb5-dev libkrb5support0 libldb-dev libldap-dev libltdl-dev liblzma-dev libmagic-dev libmount-dev libonig-dev libmysqlclient-dev libncurses5-dev libncursesw5 libnewt-dev libnih-dev libnih-dbus1 libodbc1 libp11-kit0 libpam0g libpam-modules libpam-modules-bin libpciaccess0 libpcre3-dev libplymouth-dev libpng-dev libjpeg-dev libmcrypt-dev libmhash-dev libpspell-dev libpq-dev libreadline-dev librecode-dev libroken18-heimdal libsasl2-dev libselinux1-dev libsnmp-dev libslang2-dev libsqlite3-dev libssl-dev libswitch-perl libsybdb5 libtasn1-3 libtextwrap-dev libtidy-dev libtinfo-dev libudev-dev libuuid1 libwind0-heimdal libxml2-dev libxpm-dev libxslt-dev libzip-dev
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.7 4
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.7 4
          for lib_link in $(find /usr/lib/x86_64-linux-gnu -maxdepth 1 -name "*.so" -printf "%f\n"); do
            sudo ln -s /usr/lib/x86_64-linux-gnu/$lib_link /usr/lib/$lib_link
          done
          sudo ln -sf /usr/lib/libc-client.so.2007e.0 /usr/lib/x86_64-linux-gnu/libc-client.a
          sudo mkdir -p /usr/c-client/
          sudo ln -sf /usr/lib/libc-client.so.2007e.0 /usr/c-client/libc-client.a
          curl -o /tmp/libc.deb -sL http://archive.ubuntu.com/ubuntu/pool/main/e/eglibc/libc6_2.19-0ubuntu6_amd64.deb
          sudo dpkg -i /tmp/libc.deb

      - name: Checkout
        uses: actions/checkout@v2

      - name: Compile and install packages
        run: chmod a+x .github/scripts/build_deps.sh && bash .github/scripts/build_deps.sh

      - name: Build and ship
        run: chmod a+x .github/scripts/build.sh && bash .github/scripts/build.sh
        env:
          PHP_VERSION: ${{ matrix.php-version }}
          TYPE: ${{ matrix.type }}
      - name: Check php-cli version
        run: php -v
      - name: Check php extensions
        run: php -m
      - name: Check php-cgi version
        run: php-cgi -v
      - name: Check php-fpm version
        run: |
          php-fpm -v
          sudo service --status-all 2>&1 | grep "fpm"
      - name: Check apache service
        run: |
          sudo a2dismod mpm_event
          sudo a2enmod mpm_prefork php${{ matrix.php-version }}
          sudo service apache2 restart
          sudo service --status-all 2>&1 | grep "apache"
      - name: Check pecl version
        run: pecl -V
      - name: Check php-config version
        run: php-config --version
      - name: Check phpize version
        run: phpize -v
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: php_${{ matrix.php-version }}+${{ matrix.operating-system }}
          path: /usr/local/php/php53.tar.gz
